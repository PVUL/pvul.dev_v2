# This is a basic workflow to help you get started with Actions

name: Simple Workflow

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  pull_request:
    branches: ['main']

  # schedule:
  # 4AM PT / 7AM PT, https://crontab.guru/every-hour
  # - cron: 0 4 * * *

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Set Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            mdx:
              - '**/*.mdx'
            allChanges:
              - added|deleted|modified: '**'
            addedContent:
              - added: '_content/**'
          list-files: 'csv'

      # - name: Check Files
      # uses: pvul/check-files-action@main
      # if: ${{ steps.filter.outputs.content == 'true' }}
      # run: echo '${{ steps.filter.outputs.addedContent_files }}'

      # - name: Dump steps context
      #   run: echo '${{ toJSON(steps)}}'

      # THE CONDITIONS BEFORE RUNNING CHECKS
      # steps.filter.outputs.allChanges_count == '1' &&
      # steps.filter.outputs.addedContent == 'true' &&
      # steps.filter.outputs.mdx == 'true'

      - name: Check Files
        uses: pvul/check-files-action@main
        if: |
          (
            steps.filter.outputs.addedContent == 'true' &&
            steps.filter.outputs.mdx == 'true'
          )
        env:
          filePath: ${{ steps.filter.outputs.addedContent_files }}

      - name: Install Yarn dependencies
        uses: borales/actions-yarn@v4
        with:
          cmd: add gray-matter

      - name: Use Yarn script to make changes to scheduled post
        uses: borales/actions-yarn@v4
        if: |
          (
            steps.filter.outputs.addedContent == 'true' &&
            steps.filter.outputs.mdx == 'true'
          )
        with:
          cmd: run scheduled-post ${{ steps.filter.outputs.addedContent_files }} # runs `yarn run scheduled-post`

      - name: Auto-commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        if: |
          (
            steps.filter.outputs.addedContent == 'true' &&
            steps.filter.outputs.mdx == 'true'
          )
        with:
          commit_message: 'ðŸ“… Automated changes to scheduled post'
          file_pattern: '_content/*.mdx'
      - name: Automated PR Merge
        uses: reitermarkus/automerge@v2
        if: |
          (
            steps.filter.outputs.addedContent == 'true' &&
            steps.filter.outputs.mdx == 'true'
          )
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          merge-method: squash
